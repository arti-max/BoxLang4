$include <cli>

box _start[] -> void (

    ## --- Тест 1: Логическое И (&&) ---
    ## Ожидаемый результат: на экране появится 'T' (True)
    num24 a: 10;
    num24 b: 20;
    if [a > 5 && b > 15] (
        open cli::putc['T']; 
    ) else (
        open cli::putc['F'];
    )

    ## Проверка "короткого замыкания" для &&
    ## Ожидаемый результат: на экране появится 'S' (Short-circuit)
    ## a < 5 - ложь, поэтому b > 15 даже не должно вычисляться
    if [a < 5 && b > 15] (
        open cli::putc['F'];
    ) else (
        open cli::putc['S'];
    )
    open cli::print_nl[]; ## Вывод: TS

    ## --- Тест 2: Логическое ИЛИ (||) ---
    ## Ожидаемый результат: на экране появится 'T'
    if [a > 20 || b > 15] (
        open cli::putc['T'];
    ) else (
        open cli::putc['F'];
    )

    ## Проверка "короткого замыкания" для ||
    ## Ожидаемый результат: на экране появится 'S'
    ## a > 5 - истина, поэтому b > 25 даже не должно вычисляться
    if [a > 5 || b > 25] (
        open cli::putc['S'];
    ) else (
        open cli::putc['F'];
    )
    open cli::print_nl[]; ## Вывод: TS

    ## --- Тест 3: Побитовые операции ---
    num24 x: 5;  ## 0b0101
    num24 y: 12; ## 0b1100
    
    ## Побитовое И (&)
    ## 0101 & 1100 = 0100 (4)
    if [(x & y) == 4] (
        open cli::putc['&'];
    )
    
    ## Побитовое ИЛИ (|)
    ## 0101 | 1100 = 1101 (13)
    if [(x | y) == 13] (
        open cli::putc['|'];
    )
    
    ## Побитовое Исключающее ИЛИ (^)
    ## 0101 ^ 1100 = 1001 (9)
    if [(x ^ y) == 9] (
        open cli::putc['^'];
    )
    open cli::print_nl[]; ## Вывод: &|^

    ## --- Тест 4: Приоритет операторов ---
    ## Ожидаемый результат: 'P'
    ## Выражение: a > 0 && b > 0 || x > 100 
    ## (a > 0 && b > 0) -> true
    ## true || (x > 100) -> true (короткое замыкание)
    if [a > 0 && b > 0 || x > 100] (
        open cli::putc['P'];
    ) else (
        open cli::putc['f'];
    )
    open cli::print_nl[]; ## Вывод: P
    
    asm["psh 0"];
    asm["int $0"];
)
